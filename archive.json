{
  "magic": "E!vIA5L86J2I",
  "timestamp": "2024-09-29T01:26:44.256463+00:00",
  "repo": "core-wg/oscore-key-limits",
  "labels": [
    {
      "name": "bug",
      "description": "Something isn't working",
      "color": "d73a4a"
    },
    {
      "name": "documentation",
      "description": "Improvements or additions to documentation",
      "color": "0075ca"
    },
    {
      "name": "duplicate",
      "description": "This issue or pull request already exists",
      "color": "cfd3d7"
    },
    {
      "name": "enhancement",
      "description": "New feature or request",
      "color": "a2eeef"
    },
    {
      "name": "good first issue",
      "description": "Good for newcomers",
      "color": "7057ff"
    },
    {
      "name": "help wanted",
      "description": "Extra attention is needed",
      "color": "008672"
    },
    {
      "name": "invalid",
      "description": "This doesn't seem right",
      "color": "e4e669"
    },
    {
      "name": "question",
      "description": "Further information is requested",
      "color": "d876e3"
    },
    {
      "name": "wontfix",
      "description": "This will not be worked on",
      "color": "ffffff"
    },
    {
      "name": "optimization",
      "description": "",
      "color": "87B6F5"
    },
    {
      "name": "cfrg-aead-limits",
      "description": "",
      "color": "DAB1F2"
    },
    {
      "name": "limits",
      "description": "",
      "color": "BAFCB3"
    }
  ],
  "issues": [
    {
      "number": 1,
      "id": "I_kwDOJS8M4c5i3Aks",
      "title": "Reduce scope of the limits section and point more to the CFRG document?",
      "url": "https://github.com/core-wg/oscore-key-limits/issues/1",
      "state": "OPEN",
      "author": "rikard-sics",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [
        "cfrg-aead-limits"
      ],
      "body": "We could reduce the scope of the limits section and only cover there the counting logic and OSCORE-relevant processing. Then for the rest we point to the document in CFRG .\r\nhttps://datatracker.ietf.org/doc/draft-irtf-cfrg-aead-limits/05/",
      "createdAt": "2022-07-27T19:14:31Z",
      "updatedAt": "2023-07-08T14:07:59Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 2,
      "id": "I_kwDOJS8M4c5i3Awu",
      "title": "Latest feedback from John on the limits and probabilities",
      "url": "https://github.com/core-wg/oscore-key-limits/issues/2",
      "state": "OPEN",
      "author": "rikard-sics",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [
        "limits"
      ],
      "body": "**Got the feedback below from John via mail. We should take it into account for future versions.**\r\n\r\n> These probabilities must be acceptably low\r\n\r\nI don\u2019t think this is true. The advantage per key is a quite useless measure for security protocols/use cases with several keys and maybe ever several connections. Keeping these probabilities low does not increase security when advantage functions are linear.\r\n\r\nI would not talk so much of the CA IA probabilities per key on slide 4-5. These are not very relevant measures for OSCORE, especially not OSCORE with rekeying. A relevant measure instead of IA per key would be forgery probability per forgery attempt (or perharps per number of byte sent.)",
      "createdAt": "2022-03-01T07:45:16Z",
      "updatedAt": "2023-07-08T14:09:45Z",
      "closedAt": null,
      "comments": [
        {
          "author": "rikard-sics",
          "authorAssociation": "MEMBER",
          "body": "I think we need more discussions with John to resolve this",
          "createdAt": "2023-07-07T09:15:57Z",
          "updatedAt": "2023-07-07T09:15:57Z"
        }
      ]
    },
    {
      "number": 3,
      "id": "I_kwDOJS8M4c5i3Ayl",
      "title": "Add note on relevance of 'l' limit",
      "url": "https://github.com/core-wg/oscore-key-limits/issues/3",
      "state": "CLOSED",
      "author": "rikard-sics",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "From CoRE interim on October 13 Christian commented:\r\n\r\n> Probably the 'l' limit does not matter so much for us, given the possibility of inner blockwise limiting to 1 KB and outer blockwise bringing more limits. That should releave the pressure from having the best 'l' limit since this is all very specific to OSCORE anyway.\r\n\r\nSo we could perhaps note that an 'l' limit resulting in a size limit of around 1 KB is quite likely fine for normal OSCORE (due to how inner blockwise is done).",
      "createdAt": "2022-03-01T07:44:35Z",
      "updatedAt": "2023-07-07T09:01:41Z",
      "closedAt": "2023-07-07T09:01:40Z",
      "comments": []
    },
    {
      "number": 4,
      "id": "I_kwDOJS8M4c5i3A0l",
      "title": "Using clock instead of saving counters",
      "url": "https://github.com/core-wg/oscore-key-limits/issues/4",
      "state": "OPEN",
      "author": "rikard-sics",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [
        "optimization"
      ],
      "body": "Idea from Carsten from previous IETF meeting: \"Use clock instead of saving counters\"",
      "createdAt": "2022-03-01T07:43:24Z",
      "updatedAt": "2023-07-08T14:05:03Z",
      "closedAt": null,
      "comments": [
        {
          "author": "rikard-sics",
          "authorAssociation": "MEMBER",
          "body": "We can check recording for details.",
          "createdAt": "2022-03-01T07:43:28Z",
          "updatedAt": "2022-03-01T07:43:28Z"
        }
      ]
    },
    {
      "number": 5,
      "id": "I_kwDOJS8M4c5i3A2F",
      "title": "Update content to reflect new version of draft-irtf-cfrg-aead-limits",
      "url": "https://github.com/core-wg/oscore-key-limits/issues/5",
      "state": "OPEN",
      "author": "rikard-sics",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [
        "cfrg-aead-limits"
      ],
      "body": "The content related to the limits should be updated to reflect the changes to the CFRG draft:\r\n\r\nhttps://datatracker.ietf.org/doc/html/draft-irtf-cfrg-aead-limits-03\r\n\r\nFor instance the definition/description of 'l' has changed.",
      "createdAt": "2022-03-01T07:42:49Z",
      "updatedAt": "2023-07-08T14:07:19Z",
      "closedAt": null,
      "comments": [
        {
          "author": "rikard-sics",
          "authorAssociation": "MEMBER",
          "body": "Also update according to new table with numbers for q and v: https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-aead-limits-03#section-5.5 Also the 2^-50 recommendeation.",
          "createdAt": "2022-03-01T07:42:55Z",
          "updatedAt": "2022-03-01T07:42:55Z"
        },
        {
          "author": "rikard-sics",
          "authorAssociation": "MEMBER",
          "body": "Update second section of the table to have l = 2^7",
          "createdAt": "2022-03-01T07:42:58Z",
          "updatedAt": "2022-03-01T07:42:58Z"
        },
        {
          "author": "rikard-sics",
          "authorAssociation": "MEMBER",
          "body": "Add rows from v = 2^14",
          "createdAt": "2022-03-01T07:43:03Z",
          "updatedAt": "2022-03-01T07:43:03Z"
        },
        {
          "author": "rikard-sics",
          "authorAssociation": "MEMBER",
          "body": "Calculate IA and CA based on CFRG table.",
          "createdAt": "2022-03-01T07:43:06Z",
          "updatedAt": "2022-03-01T07:43:06Z"
        },
        {
          "author": "rikard-sics",
          "authorAssociation": "MEMBER",
          "body": "Should be fine now?",
          "createdAt": "2022-07-08T16:01:08Z",
          "updatedAt": "2022-07-08T16:01:08Z"
        },
        {
          "author": "rikard-sics",
          "authorAssociation": "MEMBER",
          "body": "Check latest version: draft-irtf-cfrg-aead-limits-05\r\n",
          "createdAt": "2022-12-27T14:32:16Z",
          "updatedAt": "2022-12-27T14:32:16Z"
        }
      ]
    },
    {
      "number": 6,
      "id": "I_kwDOJS8M4c5i3A3T",
      "title": "Say in OSCORE Messages Processing to not send a message with COSE plaintext + MAC + possible padding larger than block size * l",
      "url": "https://github.com/core-wg/oscore-key-limits/issues/6",
      "state": "CLOSED",
      "author": "rikard-sics",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Note in OSCORE Messages Processing to never send a message larger than block size * l.\r\n\r\nMeaning the COSE plaintext + MAC + possible padding should not exceed (the block-size for the algorithm used multiplied with l). Since we set a limit for the l value. You basically have 3 limits; q, v, and l.\r\n\r\nYou can precalculate to estimate the size, if it becomes too large you use block-wise.",
      "createdAt": "2022-03-01T07:40:38Z",
      "updatedAt": "2023-07-07T09:34:53Z",
      "closedAt": "2023-07-07T09:34:53Z",
      "comments": [
        {
          "author": "rikard-sics",
          "authorAssociation": "MEMBER",
          "body": "I added an initial note on this. We could expand more on this and describe pre-calculation, and choosing block-wise if it becomes too large.\r\n\r\nIf large size has to be transferred implementations may consider using the block-wise transfer (if supported). We could expand more on this and describe pre-calculation, and choosing block-wise if it becomes too large.\r\n\r\nIf large size has to be trasnfered implementations may consider using the block-wise transfer (if supported). REFERENCE.",
          "createdAt": "2022-03-01T07:41:31Z",
          "updatedAt": "2022-03-01T07:41:31Z"
        },
        {
          "author": "rikard-sics",
          "authorAssociation": "MEMBER",
          "body": "Use TAG instead of MAC.\r\n\r\nSay \"authentication tag\"",
          "createdAt": "2022-03-01T07:41:35Z",
          "updatedAt": "2022-03-01T07:41:35Z"
        },
        {
          "author": "rikard-sics",
          "authorAssociation": "MEMBER",
          "body": "Say \"total size\"\r\n\r\nSay \"cipher padding\"",
          "createdAt": "2022-03-01T07:41:39Z",
          "updatedAt": "2022-03-01T07:41:39Z"
        },
        {
          "author": "rikard-sics",
          "authorAssociation": "MEMBER",
          "body": "Add reference to COSE struct document.",
          "createdAt": "2022-03-01T07:41:42Z",
          "updatedAt": "2022-03-01T07:41:42Z"
        },
        {
          "author": "rikard-sics",
          "authorAssociation": "MEMBER",
          "body": "Text has now been updated further in 6339baf7. Reference to COSE and explanation of block-wise remain to do.",
          "createdAt": "2022-03-01T07:41:59Z",
          "updatedAt": "2022-03-01T07:41:59Z"
        }
      ]
    },
    {
      "number": 7,
      "id": "I_kwDOJS8M4c5i3A4l",
      "title": "Explain exceptions where l needs to be larger than 2^8",
      "url": "https://github.com/core-wg/oscore-key-limits/issues/7",
      "state": "CLOSED",
      "author": "rikard-sics",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "For instance TCP CoAP blockwise BERT.\r\n\r\nIn general if a message size larger than 4096 is desired (16 byte block size * 2^8 blocks per message), a higher l must be chosen. We can cover how appropriate values for v and q can be calculated when a larger l is chosen.",
      "createdAt": "2022-03-01T07:40:10Z",
      "updatedAt": "2023-07-07T09:49:35Z",
      "closedAt": "2023-07-07T09:49:35Z",
      "comments": [
        {
          "author": "rikard-sics",
          "authorAssociation": "MEMBER",
          "body": "Explain more on how different l value affect the CA and IA (and how q & v can be changed to compensate).",
          "createdAt": "2022-03-01T07:40:15Z",
          "updatedAt": "2022-03-01T07:40:15Z"
        }
      ]
    },
    {
      "number": 8,
      "id": "I_kwDOJS8M4c5i3A6F",
      "title": "Redefine 'l', 'limit_q', and 'limit_v' specifically for OSCORE",
      "url": "https://github.com/core-wg/oscore-key-limits/issues/8",
      "state": "OPEN",
      "author": "rikard-sics",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [
        "limits"
      ],
      "body": "Based on feedback from John during the CoRE interim on April 28.\r\n\r\nCurrently we are using l = 2^10, dropping that to 2^8 may be beneficial.\r\n\r\nFurthermore we can define set values for 'limit_q' and 'limit_v', not relying on the CFRG document.\r\n\r\nFor instance setting an overall value for 'limit_q' to 2^20 (which is lower than all the calculated limits for q we have currently).\r\n\r\nAs long as we reduce values, like reducing the size of l and the size of 'limit_q' things should be easy to motivate as we are erring more on the side of caution.\r\n\r\nWhen it comes to redefining 'limit_v' we actually want to increase this value and here is where we need a good motivation. We can start a discussion on the mailing list based on the figures John presented. He also promised to contribute material in the form of a PR to the draft.",
      "createdAt": "2022-03-01T07:38:19Z",
      "updatedAt": "2023-07-08T14:09:50Z",
      "closedAt": null,
      "comments": [
        {
          "author": "rikard-sics",
          "authorAssociation": "MEMBER",
          "body": "After further discussions we can use l = 2^8, q = 2^20 and v = 2^20, also considering the material presented by John during a SAAG meeting. See https://datatracker.ietf.org/meeting/110/materials/slides-110-saag-analysis-of-usage-limits-of-aead-algorithms-00.pdf\r\n\r\nThis can mean that we use the formulas for calculating IA and CA from the CFRG document with these values and show that the resulting probabilities are safe (<2^-64).",
          "createdAt": "2022-03-01T07:38:44Z",
          "updatedAt": "2022-03-01T07:38:44Z"
        },
        {
          "author": "rikard-sics",
          "authorAssociation": "MEMBER",
          "body": "Double check calculations in the table, especially for AES CCM 8 with John.",
          "createdAt": "2022-03-01T07:38:49Z",
          "updatedAt": "2022-03-01T07:38:49Z"
        }
      ]
    },
    {
      "number": 9,
      "id": "I_kwDOJS8M4c5i3A77",
      "title": "How do the q & v limits and the chosen 'l' affect applications?",
      "url": "https://github.com/core-wg/oscore-key-limits/issues/9",
      "state": "OPEN",
      "author": "rikard-sics",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [
        "limits"
      ],
      "body": "Feedback from CoRE interim on April 28: How does the limits we set, and the value 'l' (Maximum length of each message in blocks) affect various applications?",
      "createdAt": "2022-03-01T07:37:50Z",
      "updatedAt": "2023-07-08T14:09:55Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 10,
      "id": "I_kwDOJS8M4c5i3A9q",
      "title": "Sync with EDHOC in LAKE and John's work",
      "url": "https://github.com/core-wg/oscore-key-limits/issues/10",
      "state": "CLOSED",
      "author": "rikard-sics",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-03-01T07:35:48Z",
      "updatedAt": "2023-07-08T14:01:43Z",
      "closedAt": "2023-07-08T14:01:43Z",
      "comments": [
        {
          "author": "rikard-sics",
          "authorAssociation": "MEMBER",
          "body": "See also issue \"Redefine 'l', 'limit_q', and 'limit_v' specifically for OSCORE\"",
          "createdAt": "2022-03-01T07:36:01Z",
          "updatedAt": "2022-03-01T07:36:01Z"
        },
        {
          "author": "rikard-sics",
          "authorAssociation": "MEMBER",
          "body": "We have other issues related to syncing with John and his feedback already. So I close this.",
          "createdAt": "2023-07-08T14:01:42Z",
          "updatedAt": "2023-07-08T14:01:42Z"
        }
      ]
    },
    {
      "number": 11,
      "id": "I_kwDOJS8M4c5i3A_C",
      "title": "Consider different probabilities p_q and p_v for OSCORE specifically?",
      "url": "https://github.com/core-wg/oscore-key-limits/issues/11",
      "state": "OPEN",
      "author": "rikard-sics",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [
        "limits"
      ],
      "body": "",
      "createdAt": "2022-03-01T07:35:24Z",
      "updatedAt": "2023-07-08T14:09:59Z",
      "closedAt": null,
      "comments": [
        {
          "author": "rikard-sics",
          "authorAssociation": "MEMBER",
          "body": "Feedback from John during the CoRE interim on April 28 was that we should not consider different probabilities. Rather the focus is more on fundamentally defining new limits for OSCORE, largely disregarding the formulas from the CFRG document.",
          "createdAt": "2022-03-01T07:35:29Z",
          "updatedAt": "2022-03-01T07:35:29Z"
        },
        {
          "author": "rikard-sics",
          "authorAssociation": "MEMBER",
          "body": "Essentially we will work in the reverse compared to what we are currently doing, updating the table in 2.1.1 to calculate CA and IA from a set l, q and v value to show that the resulting probabilities are safe.",
          "createdAt": "2022-03-01T07:35:32Z",
          "updatedAt": "2022-03-01T07:35:32Z"
        }
      ]
    },
    {
      "number": 12,
      "id": "I_kwDOJS8M4c5i3BAK",
      "title": "Each client can count q up to half(?) the q limit as an optimization",
      "url": "https://github.com/core-wg/oscore-key-limits/issues/12",
      "state": "OPEN",
      "author": "rikard-sics",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [
        "optimization"
      ],
      "body": "As suggested during the CoRE interim. This works fine with responses with no partial IV since they will be counted in that senders q counter. Each request can only have max one response without PIV. For Observe notifications they will have a PIV (except maybe the first).",
      "createdAt": "2022-03-01T07:33:43Z",
      "updatedAt": "2023-07-08T14:06:07Z",
      "closedAt": null,
      "comments": [
        {
          "author": "rikard-sics",
          "authorAssociation": "MEMBER",
          "body": "\"Pure\" servers do not need to count q, since the client will count for them? Server only needs to count responses with Partial IV? Ask Christian to clarify.",
          "createdAt": "2022-03-01T07:33:52Z",
          "updatedAt": "2022-03-01T07:33:52Z"
        },
        {
          "author": "rikard-sics",
          "authorAssociation": "MEMBER",
          "body": "Do we even need to halve q?",
          "createdAt": "2022-03-01T07:34:26Z",
          "updatedAt": "2022-03-01T07:34:26Z"
        },
        {
          "author": "rikard-sics",
          "authorAssociation": "MEMBER",
          "body": "Savings is that server does not need to count q for responses without Partial IV? So SSN can be used directly on server.",
          "createdAt": "2022-03-01T07:34:31Z",
          "updatedAt": "2022-03-01T07:34:31Z"
        },
        {
          "author": "rikard-sics",
          "authorAssociation": "MEMBER",
          "body": "Also need to look at SSN + replay window (received requests implying responses sent without partial IV)",
          "createdAt": "2022-03-01T07:34:34Z",
          "updatedAt": "2022-03-01T07:34:34Z"
        },
        {
          "author": "rikard-sics",
          "authorAssociation": "MEMBER",
          "body": "Revisit this with Christian\r\n\r\nPoint is that counting up to half q means counting your own messages with PIV and the other parties messages without PIV. So the client and server counts each other's messages without PIV.\r\n\r\nNo messages should be missed in the counting. (Whether they are observations or not.)\r\n\r\nCases: Observation Echo procedure",
          "createdAt": "2022-03-01T07:34:41Z",
          "updatedAt": "2022-03-01T07:34:41Z"
        },
        {
          "author": "rikard-sics",
          "authorAssociation": "MEMBER",
          "body": "Needs further discussion.",
          "createdAt": "2022-03-01T07:34:46Z",
          "updatedAt": "2022-03-01T07:34:46Z"
        },
        {
          "author": "rikard-sics",
          "authorAssociation": "MEMBER",
          "body": "The point is you don't even need a count_q, just use your SSN?",
          "createdAt": "2022-03-01T07:34:49Z",
          "updatedAt": "2022-03-01T07:34:49Z"
        },
        {
          "author": "rikard-sics",
          "authorAssociation": "MEMBER",
          "body": "https://hackmd.io/sOliRiyGQT-OmjxbprN9XA\r\n(see _Efficient counting of \u2018q\u2019 for OSCORE AEAD limits_)",
          "createdAt": "2022-03-01T07:34:54Z",
          "updatedAt": "2023-07-08T14:03:38Z"
        },
        {
          "author": "rikard-sics",
          "authorAssociation": "MEMBER",
          "body": "What is the maximum overestimation for the solution in the HackMD? Feedback from G\u00f6ran during the CoRE interim on April 28 was 2x (double), which makes sense to me also.",
          "createdAt": "2022-03-01T07:34:58Z",
          "updatedAt": "2022-03-01T07:34:58Z"
        }
      ]
    },
    {
      "number": 13,
      "id": "I_kwDOJS8M4c5i3BBk",
      "title": "Consider raising adding q and v limits already in COSE registry with the algorithms",
      "url": "https://github.com/core-wg/oscore-key-limits/issues/13",
      "state": "OPEN",
      "author": "rikard-sics",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [
        "limits"
      ],
      "body": "",
      "createdAt": "2022-03-01T07:33:11Z",
      "updatedAt": "2023-07-08T14:10:04Z",
      "closedAt": null,
      "comments": [
        {
          "author": "rikard-sics",
          "authorAssociation": "MEMBER",
          "body": "Could be in COSE registry, this document or elsewhere. For now intention is to keep in this document.",
          "createdAt": "2022-03-01T07:33:23Z",
          "updatedAt": "2022-03-01T07:33:23Z"
        },
        {
          "author": "rikard-sics",
          "authorAssociation": "MEMBER",
          "body": "Feedback from CoRE interim April 28: This sounds to be less relevant as the limits will end up being specific to OSCORE.",
          "createdAt": "2022-03-01T07:33:27Z",
          "updatedAt": "2022-03-01T07:33:27Z"
        }
      ]
    },
    {
      "number": 14,
      "id": "I_kwDOJS8M4c5i3BCo",
      "title": "Consider constrained devices and saving count_q and count_v regularly",
      "url": "https://github.com/core-wg/oscore-key-limits/issues/14",
      "state": "OPEN",
      "author": "rikard-sics",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [
        "optimization"
      ],
      "body": "How often must they be stored? Consider Appendix B.1 and saving the SSN.",
      "createdAt": "2022-03-01T07:32:25Z",
      "updatedAt": "2023-07-08T14:06:21Z",
      "closedAt": null,
      "comments": [
        {
          "author": "rikard-sics",
          "authorAssociation": "MEMBER",
          "body": "See Appendix B.1 for OSCORE: https://tools.ietf.org/html/rfc8613#appendix-B.1",
          "createdAt": "2022-03-01T07:32:29Z",
          "updatedAt": "2022-03-01T07:32:29Z"
        },
        {
          "author": "rikard-sics",
          "authorAssociation": "MEMBER",
          "body": "This can wait until issue \"Each client can count q up to half(?) the q limit as an optimization\" is closed.",
          "createdAt": "2022-03-01T07:32:50Z",
          "updatedAt": "2022-03-01T07:32:50Z"
        },
        {
          "author": "rikard-sics",
          "authorAssociation": "MEMBER",
          "body": "Explore further the idea from Carsten mentioned during the CoRE interim on April 28. This was about utilizing the clock (on devices which have one) to not have to save count_q and count_v in some situations.\r\n\r\nWe can also clarify that saving the counters every N is just a suggestion for implementers. Different solutions may be acceptable. The key point is making sure to not lose or underestimate the counters after reboot (while overestimating them can be fine to some extent).",
          "createdAt": "2022-03-01T07:32:57Z",
          "updatedAt": "2022-03-01T07:32:57Z"
        }
      ]
    },
    {
      "number": 15,
      "id": "I_kwDOJS8M4c5q51t9",
      "title": "Discussion on the lifetime of a Security Context",
      "url": "https://github.com/core-wg/oscore-key-limits/issues/15",
      "state": "CLOSED",
      "author": "rikard-sics",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Created by: Marco Tiloca\r\n\r\nThis can go again in Section 3.1.\r\n\r\nThe absolute time used as value of 'exp' has to be determined when locally installing the Security Context at time t_1, by adding a lifetime value to t_1. That lifetime can be a default value (possibly different between the two peers), or agreed in-band as part of the synchronized Security Context establishment (e.g. an OSCORE LwM2M object), or part of the used EDHOC Applicability Statement.",
      "createdAt": "2022-03-01T07:36:34Z",
      "updatedAt": "2023-07-07T14:29:50Z",
      "closedAt": "2023-07-07T14:29:50Z",
      "comments": [
        {
          "author": "rikard-sics",
          "authorAssociation": "MEMBER",
          "body": "Feedback from John during CoRE interim April 28: We should clarify what \"lifetime of a Context\"/\"expiration of a Context\" means. In particular this refers to the Sender/Recipient keys used and the fact that they have \"expired\" and shall no longer be used.",
          "createdAt": "2022-03-01T07:36:40Z",
          "updatedAt": "2022-03-01T07:36:40Z"
        },
        {
          "author": "rikard-sics",
          "authorAssociation": "MEMBER",
          "body": "Perhaps relevant.\r\n\r\n> The TLS 1.2 spec says: \"An upper limit of 24 hours is suggested for session ID lifetimes, since an attacker who obtains a master_secret may be able to impersonate the compromised party until the corresponding session ID is retired.\"",
          "createdAt": "2022-04-12T15:30:12Z",
          "updatedAt": "2022-04-12T15:30:12Z"
        }
      ]
    },
    {
      "number": 16,
      "id": "I_kwDOJS8M4c5q6PCD",
      "title": "Recommend lifetime for a Security Context?",
      "url": "https://github.com/core-wg/oscore-key-limits/issues/16",
      "state": "OPEN",
      "author": "rikard-sics",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Shall we specify a recommended lifetime or leave it open?\r\n\r\nPerhaps relevant:\r\n\r\n> The TLS 1.2 spec says: \"An upper limit of 24 hours is suggested for session ID lifetimes, since an attacker who obtains a master_secret may be able to impersonate the compromised party until the corresponding session ID is retired.\"\r\n\r\n",
      "createdAt": "2023-07-07T14:30:52Z",
      "updatedAt": "2023-07-07T14:30:52Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 17,
      "id": "I_kwDOJS8M4c5q7oNv",
      "title": "Make informational?",
      "url": "https://github.com/core-wg/oscore-key-limits/issues/17",
      "state": "OPEN",
      "author": "rikard-sics",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Check old minutes",
      "createdAt": "2023-07-07T18:24:07Z",
      "updatedAt": "2023-07-07T18:24:07Z",
      "closedAt": null,
      "comments": []
    }
  ],
  "pulls": []
}